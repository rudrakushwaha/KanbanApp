<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>KANBAN</title>
  <link rel="stylesheet" href="styles/main.css">
 
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
  <h1 class="center">KANBAN BOARD</h1>
  <div class="flex-box">
    <div id="fcont" class="container" value="1" data-column-id="1" ">
      
      <h1>To Do</h1>
      <input type="hidden" name="columnId" value="column1"> 
      
      <a id="newPostBtn" href="/new/1">New Task</a>


      <ul id="postsList">
        <% posts.column1.forEach(post => { %>
          <li id="<%= post._id %>" class="list-item" draggable="true">
            <h2>
              <%=post.title%>
            </h2>
            <small>
              <%=post.date %>
            </small>
            <p>
              <%=post.content%>
            </p>
            <small>By: <%=post.author%> </small>
            <a class="edit" href="/edit/<%= post._id %>">Edit</a>
            <a class="delete" href="/api/posts/delete/<%= post._id %>">Delete</a>
          </li>
          <% }); %>
      </ul>
   
    </div>
    <div id="scont" class="container" value="2" data-column-id="2" ">
      

        <h1>Doing</h1>
        <input type="hidden" name="columnId" value="column2"> 
       <a id="newPostBtn" href="/new/2">New Task</a>

       <ul id="postsList">
        <% posts.column2.forEach(post => { %>
          <li id="<%= post._id %>" class="list-item" draggable="true">
            <h2>
              <%=post.title%>
            </h2>
            <small>
              <%=post.date %>
            </small>
            <p>
              <%=post.content%>
            </p>
            <small>By: <%=post.author%> </small>
            <a class="edit" href="/edit/<%= post._id %>">Edit</a>
            <a class="delete" href="/api/posts/delete/<%= post._id %>">Delete</a>
          </li>
          <% }); %>
        </ul>
     
    </div>
    <div id="tcont" class="container" value="3" data-column-id="3" >
     

        <h1>Done</h1>
        <input type="hidden" name="columnId" value="column3"> 
     
       <a id="newPostBtn" href="/new/3">New Task</a>
       <ul id="postsList">
        <% posts.column3.forEach(post => { %>
          <li id="<%= post._id %>" class="list-item" draggable="true">
            <h2>
              <%=post.title%>
            </h2>
            <small>
              <%=post.date %>
            </small>
            <p>
              <%=post.content%>
            </p>
            <small>By: <%=post.author%> </small>
            <a class="edit" href="/edit/<%= post._id %>">Edit</a>
            <a class="delete" href="/api/posts/delete/<%= post._id %>">Delete</a>
          </li>
          <% }); %>
        </ul>
    
    </div>
  </div>

  <script>


       const columns = document.getElementsByClassName('container');

       // Add event listeners for each draggable list item
const listItems = document.querySelectorAll('.list-item');
    listItems.forEach(listItem => {
      listItem.addEventListener('dragstart', () => {
        listItem.classList.add('dragged-item');
      });

      listItem.addEventListener('dragend', () => {
        listItem.classList.remove('dragged-item');
      });
    });


// Add event listeners for each container
Array.from(columns).forEach(column => {
  column.addEventListener('dragover', (e) => {
    e.preventDefault();
    e.currentTarget.classList.add('dashed');
  });

  column.addEventListener('dragenter', (e) => {
    e.currentTarget.classList.add('dashed');
  });

  column.addEventListener('dragleave', (e) => {
    e.currentTarget.classList.remove('dashed');
  });

  column.addEventListener('drop', (e) => {
    e.preventDefault(); // Prevent default behavior

    const draggedItem = document.querySelector('.dragged-item');

    if (draggedItem && draggedItem.parentElement !== e.currentTarget) {
      
      e.currentTarget.querySelector('ul').appendChild(draggedItem);
      e.currentTarget.classList.remove('dashed');

      //printing column ID
      const columnId = e.currentTarget.getAttribute('data-column-id');
      console.log( columnId)

      //printing itemID
      // const itemId = e.currentTarget.getAttribute('id');
      const itemId = draggedItem.getAttribute('id');
      console.log(typeof itemId)

      //printing the dragged item
      const listItem = draggedItem.querySelector('.list-item');
      console.log(draggedItem)
      // draggedItem.setAttribute('data-column-id', columnId);

      const data = {
  columnId: columnId,
};

      const response = axios.patch(
      `https://api-74io.onrender.com/posts/${itemId}`,data
    ).then((response)=>{
      console.log(response.data)
    }).catch((err)=>{
      console.log(err)
    })
    // https://api-74io.onrender.com
    // http://localhost:4000



    }
  });
});



  </script>
</body>

</html>

